import telebot
from telebot import types
import requests
import config

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(config.TOKEN_BOT_TELEGRAM)
print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}



@bot.message_handler(commands=['start']) # <--- –ö–æ–º–∞–Ω–¥–∞ - "start"
def start (message):
    send_start_message(message.chat.id, message.from_user.first_name, message.from_user.id)

def send_start_message(chat_id, first_name, user_id):
    markup = types.InlineKeyboardMarkup()

    btn_weather = types.InlineKeyboardButton('‚õÖ –ü–æ–≥–æ–¥–∞', callback_data='weather') # <--- –ö–Ω–æ–ø–∫–∞ "–ü–æ–≥–æ–¥–∞"
    btn_contact = types.InlineKeyboardButton('üìå –ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='contact') # <--- –ö–Ω–æ–ø–∫–∞ "–ö–æ–Ω—Ç–∞–∫—Ç—ã"
    btn_profile = types.InlineKeyboardButton('üë§ –ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile') # <--- –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Ñ–∏–ª—å"

    markup.row(btn_contact, btn_profile)
    markup.row(btn_weather)


    bot.send_message(chat_id, f'–ü—Ä–∏–≤–µ—Ç, {first_name}! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=markup)


@bot.message_handler(commands=['code-message']) # <--- –ö–æ–º–∞–Ω–¥–∞ - "code-message" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ json
def code_message(message):
    bot.send_message(message.chat.id, message)


@bot.callback_query_handler(func=lambda callback: True)
def handle_callback(callback):

    # –ö–æ–Ω—Ç–∞–∫—Ç—ã
    if callback.data == 'contact':
        bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id) # <--- –£–¥–∞–ª—è—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        markup = types.InlineKeyboardMarkup()
        btn_vk = types.InlineKeyboardButton('VK', url='https://vk.com/zzakharov666')
        btn_git_hub = types.InlineKeyboardButton('GitHub', url='https://github.com/WebFLomD')
        btn_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='start')

        markup.add(btn_vk, btn_git_hub)
        markup.add(btn_back)

        bot.send_message(callback.message.chat.id, '–ö–æ–Ω—Ç–∞–∫—Ç—ã. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=markup)


    # –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    elif callback.data == 'profile':
        bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id) # <--- –£–¥–∞–ª—è—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        user_id = callback.message.chat.id
        user_first_name = callback.message.chat.first_name
        user_username = callback.message.chat.username

        markup = types.InlineKeyboardMarkup()
        btn_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='start')
        markup.add(btn_back)

        bot.send_message(callback.message.chat.id,
                         f'–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n\n–í–∞—à ID: {user_id}\n–í–∞—à–µ –∏–º—è: {user_first_name}\n–í–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º: {user_username}',
                         reply_markup=markup)

    # –ü–æ–≥–æ–¥–∞
    elif callback.data == 'weather':
        markup = types.InlineKeyboardMarkup()
        btn_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='start')
        markup.add(btn_back)

        bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        bot.send_message(callback.message.chat.id, '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.', reply_markup=markup)

        user_states[callback.message.chat.id] = 'weather_city'



    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –Ω–∞—á–∞–ª–æ
    elif callback.data == 'start':

        markup = types.InlineKeyboardMarkup()

        btn_weather = types.InlineKeyboardButton('‚õÖ –ü–æ–≥–æ–¥–∞', callback_data='weather')  # <--- –ö–Ω–æ–ø–∫–∞ "–ü–æ–≥–æ–¥–∞"
        btn_contact = types.InlineKeyboardButton('üìå –ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='contact')  # <--- –ö–Ω–æ–ø–∫–∞ "–ö–æ–Ω—Ç–∞–∫—Ç—ã"
        btn_profile = types.InlineKeyboardButton('üë§ –ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile')  # <--- –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Ñ–∏–ª—å"

        markup.row(btn_contact, btn_profile)
        markup.row(btn_weather)

        bot.edit_message_text(chat_id=callback.message.chat.id,
                        message_id=callback.message.message_id,
                        text=f'–ü—Ä–∏–≤–µ—Ç, {callback.from_user.first_name}, –≤–∞—à ID: {callback.from_user.id}! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:',
                        reply_markup=markup)


@bot.message_handler(func=lambda message: True)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ, –∫–æ—Ç–æ—Ä—É—é –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Üì
def get_weather(message):
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    markup = types.InlineKeyboardMarkup()
    btn_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='start')
    markup.add(btn_back)


    city = message.text # <--- –ü–æ–ª—É—á–µ–Ω–Ω—ã–π –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–∫–æ–µ –≥–æ—Ä–æ–¥, –±–µ–∑ –æ—Ç–ø–µ—á–∞—Ç–∫–æ–≤, —Ç–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç –¥–∞–ª—å—à–µ ‚Üì
    try:
        url = f'http://api.weatherapi.com/v1/current.json?key={config.WEATHERAPI_KEY}&q={city}' # <--- –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –º–æ–∂–µ—Ç –Ω–∞ –†—É—Å—Å–∫–æ–º –∏–ª–∏ –Ω–∞ –ê–Ω–≥–ª–∏–π—Å–∫–æ–º
        weather = requests.get(url).json()

        temperature = weather['current']['temp_c'] # <--- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
        wind_speed = weather['current']['wind_kph'] # <--- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ - –í–µ—Ç–µ—Ä
        cloud_cover = weather['current']['condition']['text'] # <--- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ - –û–±–ª–∞—á–Ω–æ—Å—Ç—å
        humidity = weather['current']['humidity'] # <--- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ - –í–ª–∞–∂–Ω–æ—Å—Ç—å

        # –í—ã–≤–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Üì
        bot.send_message(message.chat.id, f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature} ¬∞C\n'
                                           f'–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n'
                                           f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cloud_cover}\n'
                                           f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%', reply_markup=markup)


    except KeyError:
        bot.send_message(message.chat.id, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞: {city}', reply_markup=markup)

# –í—ã–≤–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚Üì
def info(message):
    userId = message.chat.id
    if user_states.get(userId) == 'awaiting_city':
        get_weather(message)
        user_states[userId] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞
    else:
        if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
            bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!')
        elif message.text.lower() == 'id':
            bot.reply_to(message, f'–í–∞—à ID: {message.from_user.id}')


bot.polling (non_stop = True)