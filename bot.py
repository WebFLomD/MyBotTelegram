import telebot
from telebot import types

import config

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(config.TOKEN_BOT_TELEGRAM)


@bot.message_handler(commands=['start']) # <--- –ö–æ–º–∞–Ω–¥–∞ - "start"
def start (message):
    send_start_message(message.chat.id, message.from_user.first_name, message.from_user.id)


def send_start_message(chat_id, first_name, user_id):
    markup = types.InlineKeyboardMarkup()

    btn_contact = types.InlineKeyboardButton('üìå –ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='contact') # <--- –ö–Ω–æ–ø–∫–∞ "–ö–æ–Ω—Ç–∞–∫—Ç—ã"
    btn_profile = types.InlineKeyboardButton('üë§ –ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile') # <--- –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Ñ–∏–ª—å"

    markup.row(btn_contact, btn_profile)
    

    bot.send_message(chat_id, f'–ü—Ä–∏–≤–µ—Ç, {first_name}, –≤–∞—à ID: {user_id}! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=markup)


@bot.message_handler(commands=['code-message']) # <--- –ö–æ–º–∞–Ω–¥–∞ - "code-message"
def code_message(message):
    bot.send_message(message.chat.id, message)


@bot.callback_query_handler(func=lambda callback: True)
def handle_callback(callback):
    
    # –ö–æ–Ω—Ç–∞–∫—Ç—ã
    if callback.data == 'contact':
        bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id) # <--- –£–¥–∞–ª—è—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        markup = types.InlineKeyboardMarkup()
        btn_vk = types.InlineKeyboardButton('VK', url='https://vk.com/zzakharov666')
        btn_git_hub = types.InlineKeyboardButton('GitHub', url='https://github.com/WebFLomD')
        btn_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='start')

        markup.add(btn_vk, btn_git_hub)
        markup.add(btn_back)

        bot.send_message(callback.message.chat.id, '–ö–æ–Ω—Ç–∞–∫—Ç—ã. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=markup)


    # –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    elif callback.data == 'profile':
        bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id) # <--- –£–¥–∞–ª—è—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        user_id = callback.message.chat.id
        user_first_name = callback.message.chat.first_name
        user_username = callback.message.chat.username

        markup = types.InlineKeyboardMarkup()
        btn_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='start')
        markup.add(btn_back)

        bot.send_message(callback.message.chat.id, f'–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n\n–í–∞—à ID: {user_id}\n–í–∞—à–µ –∏–º—è: {user_first_name}\n–í–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º: {user_username}', reply_markup=markup)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –Ω–∞—á–∞–ª–æ
    elif callback.data == 'start':        
        
        markup = types.InlineKeyboardMarkup()
        btn_contact = types.InlineKeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='contact') # <--- –ö–Ω–æ–ø–∫–∞ "–ö–æ–Ω—Ç–∞–∫—Ç—ã"
        btn_profile = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile') # <--- –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Ñ–∏–ª—å"
        markup.row(btn_contact, btn_profile)

        bot.edit_message_text(chat_id=callback.message.chat.id, 
                        message_id=callback.message.message_id, 
                        text=f'–ü—Ä–∏–≤–µ—Ç, {callback.from_user.first_name}, –≤–∞—à ID: {callback.from_user.id}! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', 
                        reply_markup=markup)
        

@bot.message_handler()
def info(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!')
    elif message.text.lower() == 'id':
        bot.reply_to(message, f'–í–∞—à ID: {message.from_user.id}')


bot.polling (non_stop = True)